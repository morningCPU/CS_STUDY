使用变量 
相当于宏替换
变量的命名可以包含字母、数字、下划线(注意可以数字开头,我觉得还是不要吧)
变量大小写敏感

1. 变量的基础
变量在声明时需要给予初值，在使用时，需要子啊变量名前加上 $ 符号
最好用() 或者 {} 把变量包括起来
如果要使用真实的$ 需要使用 $$

2. 变量中的变量
在定义变量值时，可以使用其他变量来构造变量的值
有两种方法：
(1) 使用 =
右侧变量的值可以是全局任意一个变量，不要求要在前面，也可以使用后面定义的
(2) 使用 := 
前面的变量不能使用后面的变量

+ 定义一个变量，其值是一个空格
nullstring := 
space := $(nullstring) # end of the line
+ 要注意 "#" 的使用
dir := /foo/bar    #directiory to put the frobs in
dir这个变量的值是"/foo/bar"，后面还跟了4个空格

+ ?= 操作符
FOO ?= bar
如果FOO没有被定义过,那么FOO的值就是"bar",否则什么也不做

3. 变量高级用法
(1) 变量值的替换
替换变量中的共有部分
格式：
$(var:a=b)或者${var:a=b}
把变量"var"中所有以"a"字串结尾的"a"替换成"b"字串
结尾是说用"空格"或者"结束符"
+ 静态模式
foo := a.o b.o c.o
bar := $(foo:%.o=%.c)

(2) 把变量的值再当成变量
x = y
y = z
a := $($(x))

4. 追加变量值
使用 += 操作符给变量
objects = main.o foo.o bar.o utils.o
objects += another.o

5. override指令
override <variable>; = <value>;
override <variable>; := <value>;

6. 多行变量
使用define关键字设置变量的值可以有

7. 环境变量


8. 目标变量


9. 模式变量







