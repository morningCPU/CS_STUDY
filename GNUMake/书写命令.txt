书写命令
每一条命令的开头必须是 Tab
如果命令是紧跟在依赖规则后面，要用 ; 间隔
make的命令默认是被 /bin/sh 解释执行的
用 # 开始注释，只能进行行注释

1. 显示命令
make 会把他要执行的命令行在命令执行前输出到屏幕上
但是我们可以使用 @ 放在命令前，那么这个命令将不被make显示出来
@echo 正在编译
和
echo 正在编译
正在编译

2. make 的参数
(1) -n 、 --just-print 只显示命令而不执行
用于进行调试 
(2) -s 、 --silent 、--quiet
全面禁止命令的显示
+ 这些同一个功能的命令都是等价的

3. 命令执行
如果要让上一条命令的结果应用在下一条命令时，应该使用分号分隔这两条命令
exec: 
    cd /home/hchen
    pwd
结果并不是 /home/hchen
要改为使用：
exec:
    cd /home/hchen;pwd
才有用

4. 命令出错
当命令运行完后，make会检测每个命令的返回码
在命令行前加上 - 可以忽略出错(注意是命令行)
+ 给make 加上 -i , --ignore-errors 参数可以忽略出错
+ -k , --keep-going 
如果某规则中的命令出错了，那么就终止改规则的执行，但继续执行其他的规则

5. 嵌套执行 make
可以在每一个目录中都书写一个该目录的Makefile

6. 定义命令包
以 define 开始 , endef 结束
define run-yacc
yacc $(firstword $^)
mv y.tab.c $@
endef
 


