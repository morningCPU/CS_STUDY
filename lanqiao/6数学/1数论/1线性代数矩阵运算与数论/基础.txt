矩阵乘法
+   行乘以列 a[n][m] * b[m][k]
    for(int i = 1;i<=n;++i)
    {
        for(int j = 1;j<=k;++j)
        {
            for(int t = i;t <= m;++t)
            {
                ans[i][j] += a[i][t] * b[t][j];
            }
        }
    }

整除
+   a/b 会向下取整
+   向上取整
    (a+b-1)/b
+   整除的符号表示 y|x 表示 x能够被y整除
+   整除的性质
    1. a|b <-> -a|b <-> a|-b <-> |a| | |b| 
    2. a|b ^ b|c -> a|c 传递性
    3. a|b ^ a|c <-> a|(bx + cy) ,x和y属于整数
    4. a|b ^ b|a -> b = |a|
    5. a|b <-> am|bm ,m不为0
    6. a|b -> |a|<=|b|,b!=0
    7. b=qa+c 且 a!=0 时 a|b <-> a|c

同余
+   两个或多个数字x，对于一个模数m的余数是相等的
+   同余的性质
    1. 自反性：a = a( mod m ) 
    2. 对称性：若 a = b(mod m),则 b = a(mod m)
    3. 传递性：若 a = b(mod m),b = c(mod m) ,则 a = c(mod m)
    4. 线性运算 a = b(mod m),c = d(mod m)
        a+-c = b+-d(mod m)
        a*c = b*d(mod m)
    5. 若 a = b(mod m)，则ak = bk(mod mk)
    6. 若 d|a,d|b,d|m,则 a = b(mod m)时，a/d = b/d(mod m/d)
    7. d|m,a = b(mod m) 则 a = b(mod d)

LCM
+   最小公倍数 __lcm(a,b);(两个下划线)
    包含在头文件 bits/stdc++.h 中
    int lcm(int a,int b)
    {
        return a/gcd(a,b)*b;//先做除法以避免溢出
    }

GCD
+   最大公约数 __gcd(a,b);
+   gcd(a,b) * lcm(a,b) = a * b;
+   公式
    int gcd(int a,int b)
    {
        return b == 0 ? a : gcd(b,a%b);
    }
