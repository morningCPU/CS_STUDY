二维费用背包模型
+   有一个体积为 V 的背包，商店有 n 中物品，每种物品有一个价值 v ，体积 w ,重量m，
    每种物品只有1个，问能够装下物品的最大价值
+   dp[i][j] 表示当前体积为 i ，重量为 j 的情况下所能拿的物品的最大价值
+   转移方程
    dp[i][j] = max(dp[i][j],dp[i-w][j-m] + v);

分组背包模型
+   有一个体积为 V 的背包，商品有 n 组物品，每组物品有若干个价值 v ，体积 w ，
    每组物品中至多选 1 个，问能够装下物品的最大价值
+   dp[i][j] 表示到第i组,体积为 j 的最大价值，不能省略第一维
+   状态转移方程
    dp[i][j] = dp[i-1][j];
    dp[i][j] = max(dp[i][j],dp[i-1][j-w] + v);